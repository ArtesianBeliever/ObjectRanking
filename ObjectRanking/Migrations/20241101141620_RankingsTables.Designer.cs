// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ObjectRanking.Data;

#nullable disable

namespace ObjectRanking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241101141620_RankingsTables")]
    partial class RankingsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ObjectRanking.Models.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.Object", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.RankingSurvey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("RelationCap")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RankingSurveys");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.Tour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DistanceMatrixUrl")
                        .HasColumnType("text");

                    b.Property<int?>("DistanceMedian")
                        .HasColumnType("integer");

                    b.Property<int?>("DistanceSum")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("RelationGraphUrl")
                        .HasColumnType("text");

                    b.Property<string>("RelationMatrixUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.Property<int>("TourNumber")
                        .HasColumnType("integer");

                    b.Property<string>("UserRankTableUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserRanking", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("RankMatrixUrl")
                        .HasColumnType("text");

                    b.HasKey("UserId", "TourId", "SurveyId");

                    b.HasIndex("SurveyId");

                    b.HasIndex("TourId");

                    b.ToTable("UserRankings");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserRankingObject", b =>
                {
                    b.Property<Guid>("UserRankingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserRankingSurveyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserRankingTourId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserRankingUserId")
                        .HasColumnType("uuid");

                    b.HasKey("UserRankingId", "ObjectId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("UserRankingUserId", "UserRankingTourId", "UserRankingSurveyId");

                    b.ToTable("UserRankingObject");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserSurvey", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "SurveyId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SurveyId");

                    b.ToTable("UserSurveys");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserSurveyRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserSurveyRoles");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.Tour", b =>
                {
                    b.HasOne("ObjectRanking.Models.Entities.RankingSurvey", "Survey")
                        .WithMany("Tours")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserRanking", b =>
                {
                    b.HasOne("ObjectRanking.Models.Entities.RankingSurvey", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjectRanking.Models.Entities.Tour", "Tour")
                        .WithMany("UserRankings")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjectRanking.Models.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserRankingObject", b =>
                {
                    b.HasOne("ObjectRanking.Models.Entities.Object", "Object")
                        .WithMany()
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjectRanking.Models.Entities.UserRanking", "UserRanking")
                        .WithMany()
                        .HasForeignKey("UserRankingUserId", "UserRankingTourId", "UserRankingSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");

                    b.Navigation("UserRanking");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserSurvey", b =>
                {
                    b.HasOne("ObjectRanking.Models.Entities.UserSurveyRole", "SurveyRole")
                        .WithMany("UserSurveys")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjectRanking.Models.Entities.RankingSurvey", "Survey")
                        .WithMany("UserSurveys")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjectRanking.Models.Entities.ApplicationUser", "User")
                        .WithMany("UserSurveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");

                    b.Navigation("SurveyRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.ApplicationUser", b =>
                {
                    b.Navigation("UserSurveys");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.RankingSurvey", b =>
                {
                    b.Navigation("Tours");

                    b.Navigation("UserSurveys");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.Tour", b =>
                {
                    b.Navigation("UserRankings");
                });

            modelBuilder.Entity("ObjectRanking.Models.Entities.UserSurveyRole", b =>
                {
                    b.Navigation("UserSurveys");
                });
#pragma warning restore 612, 618
        }
    }
}
